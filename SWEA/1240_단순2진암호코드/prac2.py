# #1. 연습문제1
# #  0, 120, 12, 7, 76, 24, 60, 121, 124, 103
#
# # 편의상 10개씩 끊었지만 실제로는 7 Bytes의 데이터를 표현한 것
# arr = [
#     0,0,0,0,0,0,0,1,1,1, 1,0,0,0,0,0,0,1,1,0,  0,0,0,0,0,1,1,1,1,0,
#        0,1,1,0,0,0,0,1,1,0, 0,0,0,1,1,1,1,0,0,1, 1,1,1,0,0,1,1,1,1,1, 1,0,0,1,1,0,0,1,1,1]
#
# result = []
#
# for i in range(10):
#     n = 0
#     # 7개씩 7개의 배열 set에 접근
#     for j in range(i*7, i*7+7, 1):
#         # arr[j] -> 0 or 1
#         # print(n)
#         n = n * 2 + arr[j]
#     result.append(n)
# print(*result)
#
# #  1,     1,     1,     1,     0,     0,    0
# # 2^6    2^5    2^4    2^3    2^2    2^1   2&0


##########################################

#2. 연습문제2
# 0F97A3
# 000011111001011110100011
# 7 101 116 3

asc = [[0, 0, 0, 0],  #2진법 - 0(16진법)
       [0, 0, 0, 1],  #2진법 - 1(16진법)
       [0, 0, 1, 0],  #2진법 - 2(16진법)
       [0, 0, 1, 1],  #2진법 - 3(16진법)
       [0, 1, 0, 0],  #2진법 - 4(16진법)
       [0, 1, 0, 1],  #2진법 - 5(16진법)
       [0, 1, 1, 0],  #2진법 - 6(16진법)
       [0, 1, 1, 1],  #2진법 - 7(16진법)
       [1, 0, 0, 0],  #2진법 - 8(16진법)
       [1, 0, 0, 1],  #2진법 - 9(16진법)
       [1, 0, 1, 0],  #2진법 - A(16진법) - 10
       [1, 0, 1, 1],  #2진법 - B(16진법) - 11
       [1, 1, 0, 0],  #2진법 - C(16진법) - 12
       [1, 1, 0, 1],  #2진법 - D(16진법) - 13
       [1, 1, 1, 0],  #2진법 - E(16진법) - 14
       [1, 1, 1, 1]]  #2진법 - F(16진법) - 15

# ASCII -> Hexadecimal
def aToh(c):
    # 9이하이면
    if c <= '9':
        # print(ord(c) - ord('0'))
        return ord(c) - ord('0')
    # 10이상이면
    else:
        return ord(c) - ord('A') + 10

def makeT(x):
    print(x)
    for i in range(4):

        t.append(asc[x][i])

t = []
arr = "0F97A3"
for i in range(len(arr)):
       makeT(aToh(arr[i]))

n = 0
print(t)
for i in range(len(t)):
    # 7bit씩 묶어서 십진수 변환
    n = n * 2 + t[i]
    if i % 7 == 6:
        print(n, end=", ")
        n = 0

if i % 7 != 6 :
    print(n)